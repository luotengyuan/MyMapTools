<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenNETCF.Drawing</name>
    </assembly>
    <members>
        <member name="T:OpenNETCF.Drawing.BitmapEx">
            <summary>
            Encapsulates a GDI+ bitmap, which consists of the pixel data for a graphics image and its attributes. A BitmapEx object is an object used to work with images defined by pixel data. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BitmapEx class with the specified size.  
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Drawing.Bitmap class from the specified file.  
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.GetHbitmap">
            <summary>
            Creates a GDI bitmap object from this BitmapEx object.  
            </summary>
            <returns>A handle to the GDI bitmap object that this method creates.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.LockBits(System.Drawing.Rectangle,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>
            BitmapEx object into system memory.  
            </summary>
            <param name="rect">A System.Drawing.Rectangle structure specifying the portion of the BitmapEx to lock.  </param>
            <param name="flags">Access level (read and write) for the BitmapEx object. ></param>
            <param name="format">PixelFormat enumeration specifying the data format of this BitmapEx object.</param>
            <returns>BitmapData object containing information about this lock operation.  </returns>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.UnlockBits(OpenNETCF.Drawing.Imaging.BitmapData)">
            <summary>
            Unlocks this BitmapEx from system memory.  
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:OpenNETCF.Drawing.BitmapEx.Width">
            <summary>
            Gets the width of this BitmapEx object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.BitmapEx.Height">
            <summary>
            Gets the height of this BitmapEx object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.BitmapData">
            <summary>
            Specifies the attributes of a bitmap image. The BitmapData class is used by the LockBits and UnlockBits methods of the BitmapEx class.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.PixelFormat">
            <summary>
            Gets or sets the format of the pixel information.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Scan0">
            <summary>
            Gets or sets the address of the first pixel data in the bitmap.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Stride">
            <summary>
            Gets or sets the stride width (also called scan width) of the bitmap object.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Width">
            <summary>
            Gets or sets the pixel width of the BitmapEx object. This can also be thought of as the number of pixels in one scan line.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Height">
            <summary>
            Gets or sets the pixel height of the BitmapEx object. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.ContentAlignment2">
            <summary>
            Specifies alignment of content on the drawing surface.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.BottomCenter">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.BottomLeft">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.BottomRight">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.MiddleCenter">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.MiddleLeft">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.MiddleRight">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.TopCenter">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.TopLeft">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment2.TopRight">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.CopyPixelOperation">
            <summary>
            Determines how the source color in a copy pixel operation is combined with the destination color to result in a final color.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.Blackness">
            <summary>
            The destination area is filled by using the color associated with index 0 in the physical palette. (This color is black for the default physical palette.)
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.CaptureBlt">
            <summary>
            Windows that are layered on top of your window are included in the resulting image. By default, the image contains only your window. Note that this generally cannot be used for printing device contexts.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.DestinationInvert">
            <summary>
            The destination area is inverted.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.MergeCopy">
            <summary>
            The colors of the source area are merged with the colors of the selected brush of the destination device context using the Boolean AND operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.MergePaint">
            <summary>
            The colors of the inverted source area are merged with the colors of the destination area by using the Boolean OR operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.NoMirrorBitmap">
            <summary>
            The bitmap is not mirrored.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.NotSourceCopy">
            <summary>
            The inverted source area is copied to the destination.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.NotSourceErase">
            <summary>
            The source and destination colors are combined using the Boolean OR operator, and then resultant color is then inverted.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.PatCopy">
            <summary>
            The brush currently selected in the destination device context is copied to the destination bitmap.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.PatInvert">
            <summary>
            The colors of the brush currently selected in the destination device context are combined with the colors of the destination are using the Boolean XOR operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.PatPaint">
            <summary>
            The colors of the brush currently selected in the destination device context are combined with the colors of the inverted source area using the Boolean OR operator. The result of this operation is combined with the colors of the destination area using the Boolean OR operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.SourceAnd">
            <summary>
            The colors of the source and destination areas are combined using the Boolean AND operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.SourceCopy">
            <summary>
            The source area is copied directly to the destination area.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.SourceErase">
            <summary>
            The inverted colors of the destination area are combined with the colors of the source area using the Boolean AND operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.SourceInvert">
            <summary>
            The colors of the source and destination areas are combined using the Boolean XOR operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.SourcePaint">
            <summary>
            The colors of the source and destination areas are combined using the Boolean OR operator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.CopyPixelOperation.Whiteness">
            <summary>
            The destination area is filled by using the color associated with index 1 in the physical palette. (This color is white for the default physical palette.)
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.FontEx">
            <summary>
            Defines a particular format for text, including font face, size, and style attributes. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.FontEx.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Initializes a new FontEx object that uses the specified attributes.  
            </summary>
            <param name="fontName">A string representation of the System.Drawing.FontFamily object.</param>
            <param name="size">The size of the new FontEx object.</param>
            <param name="fontStyle">The style of the new FontEx object.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.FontEx.ToHfont">
            <summary>
            Returns a handle to this FontEx object.
            </summary>
            <returns>A Windows handle to this FontEx object.</returns>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Name">
            <summary>
            Gets the face name of this FontEx object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Size">
            <summary>
            Gets the em-size of this FontEx object measured in the unit of this FontEx object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Style">
            <summary>
            Gets style information for this FontEx object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Angle">
            <summary>
            Gets sets the angle for the FontEx.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.ClearType">
            <summary>
            Gets or sets a clear type for FontEx object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.GDIPlus">
            <summary>
            Summary description for GDIPlus.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.GDIPlus.CreateFontIndirect(System.IntPtr)">
            <summary>
            This function creates a logical font that has the characteristics specified in the specified structure. 
            An application can subsequently select the font as the current font for any device context (DC). 			
            </summary>
            <param name="pLogFont">Long pointer to a <see cref="T:OpenNETCF.Drawing.GDIPlus.LOGFONT"/> that defines the characteristics of the logical font.</param>
            <returns>A handle to a logical font.</returns>
        </member>
        <member name="T:OpenNETCF.Drawing.GDIPlus.LOGFONT">
            <summary>
            This structure defines the attributes of a font.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.GraphicsEx">
            <summary>
            Encapsulates a GDI+ drawing surface.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FromHdc(System.IntPtr)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified native graphics handle.  
            </summary>
            <param name="nativeGraphics">native graphics handle.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FromHwnd(System.IntPtr)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified handle to a window.  
            </summary>
            <param name="hwnd">Handle to a window.</param>
            <returns>This method returns a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object for the specified window handle.  </returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FromControl(System.Windows.Forms.Control)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified <see cref="T:System.Windows.Forms.Control"/> object.  
            </summary>
            <param name="ctl"><see cref="T:System.Windows.Forms.Control"/> object</param>
            <returns>This method returns a new OpenNETCF.Drawing.GraphicsEx object for the specified specified Control object.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CompatibleGraphics(System.Windows.Forms.Control)">
            <summary>
            Creates a new copy of <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified Control object.  
            </summary>
            <param name="ctl"><see cref="T:System.Windows.Forms.Control"/> object.</param>
            <returns>This method returns a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object for the specified specified Control object.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CompatibleGraphics">
            <summary>
            Creates a new copy of <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the existing <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> objec.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyGraphics(System.Windows.Forms.Control,System.Drawing.Rectangle)">
            <summary>
            Copies the graphics.
            </summary>
            <param name="ctl"></param>
            <param name="rc"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyGraphics(OpenNETCF.Drawing.GraphicsEx,System.Drawing.Rectangle)">
            <summary>
            Copies the graphics.
            </summary>
            <param name="gx"></param>
            <param name="rc"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyGraphics(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Copies graphics from <see cref="T:System.Windows.Forms.Control"/> with transparent color.
            </summary>
            <param name="ctl">Control to copy graphics from</param>
            <param name="rc">Rectangle to copy.</param>
            <param name="transpColor">Transaprent color.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawRectangle(OpenNETCF.Drawing.PenEx,System.Drawing.Rectangle)">
            <summary>
            Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure. 
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the rectangle. </param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw. </param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawRectangle(OpenNETCF.Drawing.PenEx,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the rectangle. </param>
            <param name="x">x: x-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="y"> y: y-coordinate of the upper-left corner of the rectangle to draw.  </param>
            <param name="cx">width: width of the rectangle to draw. </param>
            <param name="cy">height: Height of the rectangle to draw. </param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.MeasureString(System.String,OpenNETCF.Drawing.FontEx,System.Int32)">
            <summary>
            Measures the specified string when drawn with the specified <see cref="T:OpenNETCF.Drawing.FontEx"/> object.  
            </summary>
            <param name="text">String to measure.</param>
            <param name="font"><see cref="T:OpenNETCF.Drawing.FontEx"/> object that defines the text format of the string.</param>
            <param name="width">Width to fit the string.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.MeasureString(System.String,OpenNETCF.Drawing.FontEx)">
            <summary>
            Measures the specified string when drawn with the specified <see cref="T:OpenNETCF.Drawing.FontEx"/> object.  
            </summary>
            <param name="text"><see cref="T:System.String"/> to measure.</param>
            <param name="font"><see cref="T:OpenNETCF.Drawing.FontEx"/> object that defines the text format of the string.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.  
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to fill.</param>
            <param name="rc"><see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill. </param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawString(System.String,OpenNETCF.Drawing.FontEx,System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Color"/> and <see cref="T:OpenNETCF.Drawing.FontEx"/> objects.
            </summary>
            <param name="text">String to draw</param>
            <param name="font"><see cref="T:OpenNETCF.Drawing.FontEx"/> object that defines the text format of the string</param>
            <param name="textColor">The <see cref="T:System.Drawing.Color"/> of text draw.</param>
            <param name="rc">Rectangle structure that specifies the location of the drawn text</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawRoundRectangle(OpenNETCF.Drawing.PenEx,System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Draws a rectangle with rounded corners.
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the rectangle</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structre that defines the corner radius.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawEllipse(OpenNETCF.Drawing.PenEx,System.Drawing.Rectangle)">
            <summary>
            Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle"/> structure.
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the ellipse.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawEllipse(OpenNETCF.Drawing.PenEx,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawImage(OpenNETCF.Drawing.BitmapEx,System.Int32,System.Int32)">
            <summary>
            Draws the specified <see cref="T:OpenNETCF.Drawing.BitmapEx"/> object at the specified location and with the original size.  
            </summary>
            <param name="image"><see cref="T:OpenNETCF.Drawing.BitmapEx"/> object to draw.</param>
            <param name="x">x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">y-coordinate of the upper-top corner of the drawn image.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawImage(OpenNETCF.Drawing.BitmapEx,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image object at the specified location and with the specified size.  
            </summary>
            <param name="image"><see cref="T:OpenNETCF.Drawing.BitmapEx"/> object to draw.</param>
            <param name="destRect"><see cref="T:System.Drawing.Rectangle"/> structure that specifies the location and size of the drawn image.
            The image is scaled to fit the rectangle.</param>
            <param name="srcRect"><see cref="T:System.Drawing.Rectangle"/> structure that specifies the portion of the image object to draw.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawLine(OpenNETCF.Drawing.PenEx,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.  
            </summary>
            <param name="pen">PenEx object that determines the color, width, and style of the line.</param>
            <param name="xStart">x-coordinate of the first point.</param>
            <param name="yStart">y-coordinate of the first point.</param>
            <param name="xEnd">x-coordinate of the second point.</param>
            <param name="yEnd">x-coordinate of the seconf point.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.GetHdc">
            <summary>
            Gets the handle to the device context associated with this <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object.
            </summary>
            <returns>Handle to the device context associated with this <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
            <summary>
            Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the GraphicsEx. 
            </summary>
            <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle</param>
            <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination rectangle.</param>
            <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,OpenNETCF.Drawing.CopyPixelOperation)">
            <summary>
            Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the GraphicsEx.
            </summary>
            <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle</param>
            <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination rectangle.</param>
            <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
            <param name="copyPixelOperation">One of the <c>CopyPixelOperation</c> values.</param>
        </member>
        <member name="T:OpenNETCF.Drawing.Drawing2D.DashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:OpenNETCF.Drawing.PenEx"/> object.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Drawing2D.DashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Drawing2D.DashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.IBasicBitmapOps">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.Clone(OpenNETCF.Drawing.Imaging.RECT,OpenNETCF.Drawing.Imaging.IBitmapImage@,System.Boolean)">
            <summary>
            Clone an area of the bitmap image
            </summary>
            <param name="rect"></param>
            <param name="outbmp"></param>
            <param name="bNeedCloneProperty"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.Flip(System.Boolean,System.Boolean,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Flip the bitmap image in x- and/or y-direction
            </summary>
            <param name="flipX"></param>
            <param name="flipY"></param>
            <param name="outbmp"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.Resize(System.UInt32,System.UInt32,System.Drawing.Imaging.PixelFormat,OpenNETCF.Drawing.Imaging.InterpolationHint,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Resize the bitmap image
            </summary>
            <param name="newWidth"></param>
            <param name="newHeight"></param>
            <param name="pixelFormat"></param>
            <param name="hints"></param>
            <param name="outbmp"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.Rotate(System.Single,OpenNETCF.Drawing.Imaging.InterpolationHint,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Rotate the bitmap image by the specified angle
            </summary>
            <param name="angle"></param>
            <param name="hints"></param>
            <param name="outbmp"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.AdjustBrightness(System.Single)">
            <summary>
            Adjust the brightness of the bitmap image
            </summary>
            <param name="percent"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.AdjustContrast(System.Single,System.Single)">
            <summary>
            This method adjusts the contrast of an image by rescaling the pixel values in the range from 0 to 1 to the new range from shadow to highlight.
            The old pixel value 0 is mapped to the new pixel value of shadow and the old pixel value 1 is mapped to the new pixel value of highlight. All other old pixel values are mapped into the new range through linear interpolation.
            </summary>
            <param name="shadow">A FLOAT value that defines the value for pixels that are currently 0.</param>
            <param name="highlight">A FLOAT value that defines the value for pixels that are currently 1.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBasicBitmapOps.AdjustGamma(System.Single)">
            <summary>
            Adjust the gamma of the bitmap image
            </summary>
            <param name="gamma"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBitmapImage.GetSize(System.Drawing.Size@)">
            <summary>
            Get bitmap dimensions pixels
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBitmapImage.GetPixelFormatID(System.Drawing.Imaging.PixelFormat@)">
            <summary>
            Get bitmap pixel format
            </summary>
            <param name="pixelFormat"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBitmapImage.LockBits(OpenNETCF.Drawing.Imaging.RECT,System.UInt32,System.Drawing.Imaging.PixelFormat,OpenNETCF.Drawing.Imaging.BitmapDataInternal@)">
            <summary>
            Access bitmap data the specified pixel format
             must support at least PIXFMT_DONTCARE and
             the canonical formats.
            </summary>
            <param name="rect"></param>
            <param name="flags"></param>
            <param name="pixelFormat"></param>
            <param name="lockedBitmapData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBitmapImage.UnlockBits(OpenNETCF.Drawing.Imaging.BitmapDataInternal@)">
            <summary>
            
            </summary>
            <param name="lockedBitmapData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBitmapImage.GetPalette(System.IntPtr@)">
            <summary>
            Set/get palette associated with the bitmap image
            Do not use directly. Use <c>ImageUtils.GetBitmapPalette</c> instead
            </summary>
            <param name="palette"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IBitmapImage.SetPalette(System.IntPtr)">
            <summary>
            Do not use directly. Use <c>ImageUtils.SetBitmapPalette</c> instead
            </summary>
            <param name="palette"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.IImage">
            <summary>
            This is the basic interface to an image object. It allows applications to do the following: 
            Display the image onto a destination graphics context  
            Push image data into an image sink 
            Access image properties and metadata Decoded image objects and in-memory bitmap image objects support the IImage interface
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImage.GetPhysicalDimension(System.Drawing.Size@)">
            <summary>
            Get the device-independent physical dimension of the image
             unit of 0.01mm
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImage.GetImageInfo(OpenNETCF.Drawing.Imaging.ImageInfo@)">
            <summary>
            Get basic image info
            </summary>
            <param name="imageInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImage.SetImageFlags(OpenNETCF.Drawing.Imaging.ImageFlags)">
            <summary>
            Set image flags
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImage.Draw(System.IntPtr,OpenNETCF.Drawing.Imaging.RECT,OpenNETCF.Drawing.Imaging.RECT)">
            <summary>
            Display the image a GDI device context
            </summary>
            <param name="hdc"></param>
            <param name="dstRect"></param>
            <param name="srcRect"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImage.PushIntoSink(OpenNETCF.Drawing.Imaging.IImageSink)">
            <summary>
            Push image data into an IImageSink
            </summary>
            <param name="sink"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImage.GetThumbnail(System.UInt32,System.UInt32,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Get a thumbnail representation for the image object
            </summary>
            <param name="thumbWidth"></param>
            <param name="thumbHeight"></param>
            <param name="thumbImage"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.IImageDecoder">
            <summary>
            This is a low-level interface to an image decoder object. 
            Many simple applications do not need to work with decoder objects directly and can work with 
            higher level decoded image objects instead. 
            More sophisticated applications can use the IImageDecoder interface to have finer control over the interaction with decoder objects.
            The IImageDecoder interface can support images with multiple frames. Multiframe images are accessed via multidimensional indices. 
            This interface can support an arbitrary number of dimensions in nonrectangular arrangements
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.InitDecoder(OpenNETCF.Runtime.InteropServices.ComTypes.IStream,OpenNETCF.Drawing.Imaging.DecoderInitFlag)">
            <summary>
            Initialize the image decoder object
            </summary>
            <param name="stream"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.TerminateDecoder">
            <summary>
            Clean up the image decoder object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.BeginDecode(OpenNETCF.Drawing.Imaging.IImageSink,System.IntPtr)">
            <summary>
            Start decoding the current frame
            </summary>
            <param name="sink"></param>
            <param name="newPropSet"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.Decode">
            <summary>
            Continue decoding
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.EndDecode(System.Int32)">
            <summary>
            Stop decoding the current frame
            </summary>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetFrameDimensionsCount(System.UInt32@)">
            <summary>
            Query multi-frame dimensions
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetFrameDimensionsList(System.Guid@,System.UInt32@)">
            <summary>
            Query multi-frame dimensions
            </summary>
            <param name="dimensionIDs"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetFrameCount(System.Guid@,System.UInt32@)">
            <summary>
            Get number of frames for the specified dimension
            </summary>
            <param name="dimensionID"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.SelectActiveFrame(System.Guid@,System.UInt32)">
            <summary>
            Select currently active frame
            </summary>
            <param name="dimensionID"></param>
            <param name="frameIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetImageInfo(OpenNETCF.Drawing.Imaging.ImageInfo@)">
            <summary>
            Get basic information about the image
            </summary>
            <param name="imageInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetThumbnail(System.UInt32,System.UInt32,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Get image thumbnail
            </summary>
            <param name="thumbWidth"></param>
            <param name="thumbHeight"></param>
            <param name="thumbImage"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.QueryDecoderParam(System.Guid)">
            <summary>
            Query decoder parameters
            </summary>
            <param name="Guid"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.SetDecoderParam(System.Guid,System.UInt32,System.IntPtr)">
            <summary>
            Set decoder parameters
            </summary>
            <param name="Guid"></param>
            <param name="Length"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetPropertyCount(System.UInt32@)">
            <summary>
            Get image property count
            </summary>
            <param name="numOfProperty"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetPropertyIdList(System.UInt32,OpenNETCF.Drawing.Imaging.ImageTag[])">
            <summary>
            Get selected image properties
            </summary>
            <param name="numOfProperty"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetPropertyItemSize(OpenNETCF.Drawing.Imaging.ImageTag,System.UInt32@)">
            <summary>
            Get the size of property data
            </summary>
            <param name="propId"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetPropertyItem(OpenNETCF.Drawing.Imaging.ImageTag,System.UInt32,System.IntPtr)">
            <summary>
            Get the property data
            </summary>
            <param name="propId"></param>
            <param name="propSize"></param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.GetPropertySize(System.UInt32@,System.UInt32@)">
            <summary>
            
            </summary>
            <param name="totalBufferSize"></param>
            <param name="numProperties"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageDecoder.SetPropertyItem(OpenNETCF.Drawing.Imaging.PropertyItem)">
            <summary>
            Sets property on the image
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.IImageSink">
            <summary>
            This interface allows an image source, such as an image decoder, and an image sink to exchange data. 
            The most important interaction between the source and the sink happens when they negotiate data transfer 
            parameters during the call to the IImageSink::BeginSink method
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.BeginSink(OpenNETCF.Drawing.Imaging.ImageInfo@,OpenNETCF.Drawing.Imaging.RECT@)">
            <summary>
            Begin the sink process
            </summary>
            <param name="imageInfo"></param>
            <param name="subarea"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.EndSink(System.Int32)">
            <summary>
            End the sink process
            </summary>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.SetPalette(OpenNETCF.Drawing.Imaging.ColorPalette@)">
            <summary>
            Pass the color palette to the image sink
            </summary>
            <param name="palette"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.GetPixelDataBuffer(OpenNETCF.Drawing.Imaging.RECT,System.Drawing.Imaging.PixelFormat,System.Boolean,OpenNETCF.Drawing.Imaging.BitmapDataInternal@)">
            <summary>
            Ask the sink to allocate pixel data buffer
            </summary>
            <param name="rect"></param>
            <param name="pixelFormat"></param>
            <param name="lastPass"></param>
            <param name="bitmapData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.ReleasePixelDataBuffer(OpenNETCF.Drawing.Imaging.BitmapDataInternal@)">
            <summary>
            Give the sink pixel data and release data buffer
            </summary>
            <param name="bitmapData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.PushPixelData(OpenNETCF.Drawing.Imaging.RECT,OpenNETCF.Drawing.Imaging.BitmapDataInternal@,System.Boolean)">
            <summary>
            Push pixel data
            </summary>
            <param name="rect"></param>
            <param name="bitmapData"></param>
            <param name="lastPass"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.PushRawData(System.IntPtr,System.UInt32)">
            <summary>
            Push raw image data
            </summary>
            <param name="buffer"></param>
            <param name="bufsize"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.NeedTransform(System.UInt32@)">
            <summary>
            This method is used by an image source to determine whether an image 
            sink should rotate an image and by how much it should rotate the image
            </summary>
            <param name="rotation"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.NeedRawProperty">
            <summary>
            This method is used by an image source to determine whether an image sink can accept raw properties
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.PushRawInfo(System.Byte[])">
            <summary>
            This method is used by an image source to send raw information about an image to an image sink
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImageSink.GetPropertyBuffer(System.Int32,System.IntPtr)">
            <summary>
            Retrieves a property as a blob
            </summary>
            <param name="uiTotalBufferSize"></param>
            <param name="ppBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateImageFromStream(OpenNETCF.Runtime.InteropServices.ComTypes.IStream,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Create an image object from an input stream
             stream doesn't have to seekable
             caller should Release the stream if call is successful
            </summary>
            <param name="stream"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateImageFromFile(System.String,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Create an image object from a file
            </summary>
            <param name="filename"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateImageFromBuffer(System.Byte[],System.UInt32,OpenNETCF.Drawing.Imaging.BufferDisposalFlag,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Create an image object from a memory buffer
            </summary>
            <param name="buf"></param>
            <param name="size"></param>
            <param name="disposalFlag"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateNewBitmap(System.UInt32,System.UInt32,System.Drawing.Imaging.PixelFormat,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Create a new bitmap image object
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="pixelFormat"></param>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateBitmapFromImage(OpenNETCF.Drawing.Imaging.IImage,System.UInt32,System.UInt32,System.Drawing.Imaging.PixelFormat,OpenNETCF.Drawing.Imaging.InterpolationHint,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Create a bitmap image from an IImage object
            </summary>
            <param name="image"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="pixelFormat"></param>
            <param name="hints"></param>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateBitmapFromBuffer(OpenNETCF.Drawing.Imaging.BitmapDataInternal@,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Create a new bitmap image object on user-supplied memory buffer
            </summary>
            <param name="bitmapData"></param>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateImageDecoder(OpenNETCF.Runtime.InteropServices.ComTypes.IStream,OpenNETCF.Drawing.Imaging.DecoderInitFlag,OpenNETCF.Drawing.Imaging.IImageDecoder@)">
            <summary>
            Create an image decoder object to process the given input stream
            </summary>
            <param name="stream"></param>
            <param name="flags"></param>
            <param name="decoder"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.CreateImageEncoderToStream(System.Guid@,OpenNETCF.Runtime.InteropServices.ComTypes.IStream,OpenNETCF.Drawing.Imaging.IImageEncoder@)">
            <summary>
            Create an image encoder object that can output data the
            specified image file format.
            </summary>
            <param name="clsid"></param>
            <param name="stream"></param>
            <param name="encoder"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.GetInstalledDecoders(System.UInt32@,System.IntPtr@)">
            <summary>
            Get a list of all currently installed image decoders
            </summary>
            <param name="count"></param>
            <param name="decoders"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.GetInstalledEncoders(System.UInt32@,System.IntPtr@)">
            <summary>
            Get a list of all currently installed image decoders
            </summary>
            <param name="count"></param>
            <param name="encoders"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.InstallImageCodec(OpenNETCF.Drawing.Imaging.ImageCodecInfo@)">
            <summary>
            Install an image encoder / decoder
             caller should do the regular COM component
             installation before calling this method
            </summary>
            <param name="codecInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.IImagingFactory.UninstallImageCodec(System.String,System.UInt32)">
            <summary>
            Uninstall an image encoder / decoder
            </summary>
            <param name="codecName"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImageCodecInfo">
            <summary>
            Describes Imaging codec
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.CodecName">
            <summary>
            Codec name
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.DllName">
            <summary>
            Codec Dll name
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.FormatDescription">
            <summary>
            Codec format description
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
            <summary>
            Codec's file's extension (e.g. BMP)
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.MimeType">
            <summary>
            Codec's image MIME type
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.Flags">
            <summary>
            Codec flags
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.ImageCodecInfo.Version">
            <summary>
            Codec version
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImageProperty">
            <summary>
            Defines a property of an Image
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageProperty.FromByteArray(System.Byte[])">
            <summary>
            Generates an ImageProperty from an array of bytes
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageProperty.ToByteArray">
            <summary>
            Gets the property as a byte representation
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageProperty.GetValue">
            <summary>
            Retrieves the value of the given property
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImagingFactory">
            <summary>
            This interface is used to create bitmaps and images and to manage image encoders and decoders.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImagingFactoryClass">
            <summary>
            This interface is used to create bitmaps and images and to manage image encoders and decoders.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateImageFromStream(OpenNETCF.Runtime.InteropServices.ComTypes.IStream,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Create an image object from an input stream
             stream doesn't have to seekable
             caller should Release the stream if call is successful
            </summary>
            <param name="stream"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateImageFromFile(System.String,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Create an image object from a file
            </summary>
            <param name="filename"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateImageFromBuffer(System.Byte[],System.UInt32,OpenNETCF.Drawing.Imaging.BufferDisposalFlag,OpenNETCF.Drawing.Imaging.IImage@)">
            <summary>
            Create an image object from a memory buffer
            </summary>
            <param name="buf"></param>
            <param name="size"></param>
            <param name="disposalFlag"></param>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateNewBitmap(System.UInt32,System.UInt32,System.Drawing.Imaging.PixelFormat,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Create a new bitmap image object
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="pixelFormat"></param>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateBitmapFromImage(OpenNETCF.Drawing.Imaging.IImage,System.UInt32,System.UInt32,System.Drawing.Imaging.PixelFormat,OpenNETCF.Drawing.Imaging.InterpolationHint,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Create a bitmap image from an IImage object
            </summary>
            <param name="image"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="pixelFormat"></param>
            <param name="hints"></param>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateBitmapFromBuffer(OpenNETCF.Drawing.Imaging.BitmapDataInternal@,OpenNETCF.Drawing.Imaging.IBitmapImage@)">
            <summary>
            Create a new bitmap image object on user-supplied memory buffer
            </summary>
            <param name="bitmapData"></param>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateImageEncoderToStream(System.Guid@,OpenNETCF.Runtime.InteropServices.ComTypes.IStream,OpenNETCF.Drawing.Imaging.IImageEncoder@)">
            <summary>
            Create an image encoder object that can output data the
            specified image file format.
            </summary>
            <param name="clsid"></param>
            <param name="stream"></param>
            <param name="encoder"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.CreateImageEncoderToFile(System.Guid@,System.String,OpenNETCF.Drawing.Imaging.IImageEncoder@)">
            <summary>
            Create an image encoder object that can output data the
            specified image file format.
            </summary>
            <param name="clsid"></param>
            <param name="filename"></param>
            <param name="encoder"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.GetInstalledDecoders(System.UInt32@,System.IntPtr@)">
            <summary>
            Get a list of all currently installed image decoders
            </summary>
            <param name="count"></param>
            <param name="decoders"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.GetInstalledEncoders(System.UInt32@,System.IntPtr@)">
            <summary>
            Get a list of all currently installed image decoders
            </summary>
            <param name="count"></param>
            <param name="encoders"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.InstallImageCodec(OpenNETCF.Drawing.Imaging.ImageCodecInfo@)">
            <summary>
            Install an image encoder / decoder
             caller should do the regular COM component
             installation before calling this method
            </summary>
            <param name="codecInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImagingFactoryClass.UninstallImageCodec(System.String,System.UInt32)">
            <summary>
            Uninstall an image encoder / decoder
            </summary>
            <param name="codecName"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.Rational">
            <summary>
            Holds a Rational number used by imaging properties
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.SRational">
            <summary>
            Holds a Signed Rational number used by imaging properties
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.TAG_TYPE">
            <summary>
            Property tag types
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.BYTE">
            <summary>
            8-bit unsigned int
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.ASCII">
            <summary>
            8-bit byte containing one 7-bit ASCII code.
            NULL terminated.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.SHORT">
            <summary>
            16-bit unsigned int
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.LONG">
            <summary>
            32-bit unsigned int
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.RATIONAL">
            <summary>
            Two LONGs.  The first LONG is the numerator,
            the second LONG expresses the denominator.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.UNDEFINED">
            <summary>
            8-bit byte that can take any value depending
            on field definition
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.SLONG">
            <summary>
            32-bit singed integer (2's complement notation)
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TAG_TYPE.SRATIONAL">
            <summary>
            Two SLONGs. First is numerator, second is the denominator
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.PenEx">
            <summary>
            Defines an object used to draw lines and curves.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the <see cref="P:OpenNETCF.Drawing.PenEx.Color"/>.  
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the Width.  
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
            <param name="width">The <see cref="P:OpenNETCF.Drawing.PenEx.Width"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color,OpenNETCF.Drawing.Drawing2D.DashStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the <see cref="P:OpenNETCF.Drawing.PenEx.DashStyle"/>.
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
            <param name="style">The <see cref="P:OpenNETCF.Drawing.PenEx.DashStyle"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color,OpenNETCF.Drawing.Drawing2D.DashStyle,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the <see cref="P:OpenNETCF.Drawing.PenEx.Color"/>.  
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
            <param name="width">The <see cref="P:OpenNETCF.Drawing.PenEx.Width"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
            <param name="style">The <see cref="P:OpenNETCF.Drawing.PenEx.DashStyle"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
        </member>
        <member name="P:OpenNETCF.Drawing.PenEx.Color">
            <summary>
            Gets or sets the color of this object.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.PenEx.DashStyle">
            <summary>
            Gets or sets the style used for dashed lines drawn with this <see cref="T:OpenNETCF.Drawing.PenEx"/> object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.PenEx.Width">
            <summary>
            Gets or sets the Width of this object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.ColorTranslator">
            <summary>
            Translates colors to and from <see cref="T:System.Drawing.Color"/> structures.
            </summary>
            <seealso cref="T:System.Drawing.ColorTranslator">System.Drawing.ColorTranslator Class</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
            <summary>
            Translates the specified <see cref="T:System.Drawing.Color"/> structure to an HTML string color representation.
            </summary>
            <param name="c">The <see cref="T:System.Drawing.Color"/> structure to translate.</param>
            <returns>The string that represents the HTML color.</returns>
            <remarks>Unlike the desktop version of this function it does not check for named colors but instead always returns the hex notation values - e.g. Color.Red = "#FF0000"</remarks>
            <seealso cref="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">System.Drawing.ColorTranslator.ToHtml Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
            <summary>
            Translates the specified <see cref="T:System.Drawing.Color"/> structure to a Windows color.
            </summary>
            <param name="c">The <see cref="T:System.Drawing.Color"/> structure to translate.</param>
            <returns>The Windows color value.</returns>
            <seealso cref="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">System.Drawing.ColorTranslator.ToWin32 Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.FromHtml(System.String)">
            <summary>
            Translates an HTML color representation to a <see cref="T:System.Drawing.Color"/> structure.
            </summary>
            <param name="htmlColor">The string representation of the Html color to translate.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure that represents the translated HTML color.</returns>
            <seealso cref="M:System.Drawing.ColorTranslator.FromHtml(System.String)">System.Drawing.ColorTranslator.FromHtml Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.FromWin32(System.Int32)">
            <summary>
            Translates a Windows color value to a <see cref="T:System.Drawing.Color"/> structure.
            </summary>
            <param name="win32Color">The Windows color to translate.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure that represents the translated Windows color.</returns>
            <seealso cref="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">System.Drawing.ColorTranslator.FromWin32 Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.FromOle(System.Int32)">
            <summary>
            Translates an OLE color value to a <see cref="T:System.Drawing.Color"/> structure.
            </summary>
            <param name="oleColor">The OLE color to translate.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure that represents the translated OLE color.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
            <summary>
            Translates the specified <see cref="T:System.Drawing.Color"/> structure to an OLE color.
            </summary>
            <param name="c">The <see cref="T:System.Drawing.Color"/> structure to translate.</param>
            <returns>The OLE color value.</returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImageTag">
            <summary>
            Image property ID tags (PROPID's from the EXIF tags)
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_EXIF_IFD">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_GPS_IFD">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_NEW_SUBFILE_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SUBFILE_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_IMAGE_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_IMAGE_HEIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_BITS_PER_SAMPLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_COMPRESSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PHOTOMETRIC_INTERP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THRESH_HOLDING">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_CELL_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_CELL_HEIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_FILL_ORDER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_DOCUMENT_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_IMAGE_DESCRIPTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_EQUIP_MAKE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_EQUIP_MODEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_STRIP_OFFSETS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_ORIENTATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SAMPLES_PER_PIXEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_ROWS_PER_STRIP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_STRIP_BYTES_COUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_MIN_SAMPLE_VALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_MAX_SAMPLE_VALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_X_RESOLUTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_Y_RESOLUTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PLANAR_CONFIG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PAGE_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_X_POSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_Y_POSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_FREE_OFFSET">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_FREE_BYTE_COUNTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_GRAY_RESPONSE_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_GRAY_RESPONSE_CURVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_T4_OPTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_T6_OPTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_RESOLUTION_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PAGE_NUMBER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TRANSFER_FUNCTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SOFTWARE_USED">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_DATE_TIME">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_ARTIST">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HOST_COMPUTER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PREDICTOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_WHITE_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PRIMAY_CHROMATICS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_COLOR_MAP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_HINTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TILE_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TILE_LENGTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TILE_OFFSET">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TILE_BYTE_COUNTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_INK_SET">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_INK_NAMES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_NUMBER_OF_INKS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_DOT_RANGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TARGET_PRINTER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_EXTRA_SAMPLES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SAMPLE_FORMAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SMIN_SAMPLE_VALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SMAX_SAMPLE_VALUE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_TRANSFER_RANGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_PROC">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_INTER_FORMAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_INTER_LENGTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_RESTART_INTERVAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_LOSSLESS_PREDICTORS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_POINT_TRANSFORMS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_Q_TABLES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_DC_TABLES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_AC_TABLES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_YCbCr_COEFFICIENTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_YCbCr_SUBSAMPLING">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_YCbCr_POSITIONING">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_REF_BLACK_WHITE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_ICC_PROFILE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_GAMMA">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_ICC_PROFILE_DESCRIPTOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_SRGB_RENDERING_INTENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_IMAGE_TITLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_COPYRIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_RESOLUTION_X_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_RESOLUTION_Y_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_RESOLUTION_X_LENGTH_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_RESOLUTION_Y_LENGTH_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PRINT_FLAGS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PRINT_FLAGS_VERSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PRINT_FLAGS_CROP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PRINT_FLAGS_BLEEDWIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PRINT_FLAGS_BLEEDWIDTHSCALE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_LPI">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_LPI_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_DEGREE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_SHAPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_MISC">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_HALFTONE_SCREEN">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_JPEG_QUALITY">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_GRID_SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_FORMAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_HEIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_COLORDEPTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_PLANES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_RAWBYTES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_COMPRESSED_SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_COLORTRANSFER_FUNCTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_IMAGE_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_IMAGE_HEIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_BITS_PER_SAMPLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_COMPRESSION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_PHOTOMETRIC_INTERP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_IMAGE_DESCRIPTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_EQUIP_MAKE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_EQUIP_MODEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_STRIP_OFFSETS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_ORIENTATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_SAMPLES_PER_PIXEL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_ROWS_PER_STRIP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_STRIP_BYTES_COUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_RESOLUTION_X">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_RESOLUTION_Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_PLANAR_CONFIG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_RESOLUTION_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_TRANSFER_FUNCTION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_SOFTWARE_USED">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_DATE_TIME">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_ARTIST">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_WHITE_POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_PRIMAY_CHROMATICS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_YCbCr_COEFFICIENTS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_YCbCr_SUBSAMPLING">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_YCbCr_POSITIONING">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_REF_BLACK_WHITE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_THUMBNAIL_COPYRIGHT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_LUMINANCE_TABLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_CHROMINANCE_TABLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_FRAMEDELAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_LOOPCOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PIXEL_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PIXEL_PER_UNIT_X">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PIXEL_PER_UNIT_Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.TAG_PALETTE_HISTOGRAM">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_EXPOSURE_TIME">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_F_NUMBER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_EXPOSURE_PROG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SPECTRAL_SENSE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_ISO_SPEED">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_OECF">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_VER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_D_T_ORIG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_D_T_DIGITIZED">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_COMP_CONFIG">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_COMP_BPP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SHUTTER_SPEED">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_APERATURE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_BRIGHTNESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_EXPOSURE_BIAS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_MAX_APERATURE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SUBJECT_DIST">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_METERING_MODE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_LIGHT_SOURCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FLASH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FOCAL_LENGTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_MAKER_NOTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_USER_COMMENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_D_T_SUBSEC">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_D_T_ORIG_SS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_D_T_DIG_SS">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FPX_VER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_COLOR_SPACE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_PIX_X_DIM">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_PIX_Y_DIM">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_RELATED_WAV">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_INTEROP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FLASH_ENERGY">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SPATIAL_FR">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FOCAL_X_RES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FOCAL_Y_RES">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FOCAL_RES_UNIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SUBJECT_LOC">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_EXPOSURE_INDEX">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SENSING_METHOD">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_FILE_SOURCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_SCENE_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.ImageTag.EXIF_TAG_CFA_PATTERN">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.TagType">
            <summary>
            Image tyge type
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.BYTE">
            <summary>
            8-bit unsigned int
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.ASCII">
            <summary>
            8-bit byte containing one 7-bit ASCII code.
            NULL terminated.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.SHORT">
            <summary>
            16-bit unsigned int
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.LONG">
            <summary>
            32-bit unsigned int
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.RATIONAL">
            <summary>
            Two LONGs.  The first LONG is the numerator,
            the second LONG expresses the denomintor. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.UNDEFINED">
            <summary>
            8-bit byte that can take any value depending
            on field definition
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.SLONG">
            <summary>
            32-bit singed integer (2's complement notation)
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Imaging.TagType.SRATIONAL">
            <summary>
            Two SLONGs. First is numerator, second is denominator
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImageUtils">
            <summary>
            High-level image manipulation routines
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.RotateFlip(System.Drawing.Bitmap,OpenNETCF.Drawing.RotationAngle,OpenNETCF.Drawing.FlipAxis)">
            <summary>
            Rotate and/or flip bitmap
            </summary>
            <param name="bitmap">Image</param>
            <param name="type">Operation</param>
            <returns>Modified bitmap</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.RotateFlip(System.Drawing.Bitmap,OpenNETCF.Drawing.RotateFlipType)">
            <summary>
            Rotate and/or flip bitmap
            </summary>
            <param name="bitmap">Image</param>
            <param name="type">Operation</param>
            <returns>Modified bitmap</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.Rotate(System.Drawing.Bitmap,OpenNETCF.Drawing.RotationAngle)">
            <summary>
            Rotates image by specified amount of degrees
            </summary>
            <param name="bitmap">Image</param>
            <param name="angle">Amount of degrees to rotate image by. Must be 90, 180, or 270</param>
            <returns>Rotated image</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.Rotate(System.Drawing.Bitmap,System.Single)">
            <summary>
            Rotates image by specified amount of degrees
            </summary>
            <param name="bitmap">Image</param>
            <param name="angle">Amount of degrees to rotate image by. Must be 90, 180, or 270</param>
            <returns>Rotated image</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.Flip(System.Drawing.Bitmap,OpenNETCF.Drawing.FlipAxis)">
            <summary>
            Flips image around X and/or Y axes
            </summary>
            <param name="bitmap">Image</param>
            <param name="axis">Axis or axes to flip on</param>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.Flip(OpenNETCF.Drawing.Imaging.IBitmapImage,OpenNETCF.Drawing.FlipAxis)">
            <summary>
            Flips image around X and/or Y axes
            </summary>
            <param name="bitmap">Image</param>
            <param name="axis">Axis or axes to flip on</param>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.Flip(System.Drawing.Bitmap,System.Boolean,System.Boolean)">
            <summary>
            Flips image around X and/or Y axes
            </summary>
            <param name="bitmap">Image</param>
            <param name="flipX">Whether to flip around X axis</param>
            <param name="flipY">Whether to flip around Y axis</param>
            <returns>Flipped image</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.IBitmapImageToBitmap(OpenNETCF.Drawing.Imaging.IBitmapImage)">
            <summary>
            Converts Imaging API IBitmapImage object to .NET Bitmap object
            </summary>
            <param name="imageBitmap">Source IImageBitmap object</param>
            <returns>Bitmap object</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.CreateThumbnail(System.IO.Stream,System.Drawing.Size)">
            <summary>
            Creates a thumbnail of a specified size out of a (compressed image)
            </summary>
            <param name="stream">Stream containing the image</param>
            <param name="size">requested thumbnail size</param>
            <returns>Thumbnail image</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.BitmapToIImageBitmap(System.Drawing.Bitmap)">
            <summary>
            Converts .NET Bitmap object to Imaging API IBitmapImage object
            </summary>
            <param name="bitmap">Source Bitmap object</param>
            <returns>IImageBitmap object</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.LoadProperty(System.String,OpenNETCF.Drawing.Imaging.ImageTag)">
            <summary>
            Loads specified image property from the given image
            </summary>
            <param name="imagePath">path to the image file</param>
            <param name="property">Property tag</param>
            <returns>Property</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.LoadProperty(OpenNETCF.Drawing.Imaging.IImageDecoder,OpenNETCF.Drawing.Imaging.ImageTag)">
            <summary>
            Loads specified image property from an ImageDecoder object
            </summary>
            <param name="decoder"><c>IImageDecoder</c> object</param>
            <param name="property">Property tag</param>
            <returns>Property</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.LoadProperty(OpenNETCF.Drawing.Imaging.PropertyItem)">
            <summary>
            Loads managed <c>ImageProperty</c> object from an unmanaged <c>PropertyItem</c>
            </summary>
            <param name="item"><c>PropertyItem</c></param>
            <returns><c>ImageProperty</c></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.GetAllTags(OpenNETCF.Drawing.Imaging.IImageDecoder)">
            <summary>
            Loads all image tags for the image
            </summary>
            <param name="decoder"><c>IImageDecoder</c> object</param>
            <returns>Array of all tags</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.GetAllProperties(OpenNETCF.Drawing.Imaging.IImageDecoder)">
            <summary>
            Loads all image properties for the image
            </summary>
            <param name="decoder"><c>IImageDecoder</c> object</param>
            <returns>Array of all properties</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.GetBitmapPalette(OpenNETCF.Drawing.Imaging.IBitmapImage)">
            <summary>
            Retrieves bitmap palette, or null on error
            </summary>
            <param name="bitmap">Bitmap whose palette to retireve</param>
            <returns>Palette</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.SetBitmapPalette(OpenNETCF.Drawing.Imaging.IBitmapImage,OpenNETCF.Drawing.Imaging.ColorPalette)">
            <summary>
            Modifies bitmap palette
            </summary>
            <param name="bitmap">Bitmap</param>
            <param name="palette">New palette</param>
            <returns>Success indicator</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.GetInstalledEncoders">
            <summary>
            Gets all of the installed imaging encoders on the device
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.Imaging.ImageUtils.GetInstalledDecoders">
            <summary>
            Gets all of the installed imaging decoders on the device
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.PropertyItem">
            <summary>
            Internal class
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.ImageFormatGuid">
            <summary>
            Standard image format Guids
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.RotateFlipType">
            <summary>
            Specifies the direction of an image's rotation and the axis used to flip the image.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate180FlipXY">
            <summary>
            Specifies a 180-degree rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.RotateNoneFlipNone">
            <summary>
            Specifies no rotation and no flipping.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate270FlipXY">
            <summary>
            Specifies a 270-degree rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate90FlipNone">
            <summary>
            Specifies a 90-degree rotation without flipping.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate180FlipNone">
            <summary>
            Specifies a 180-degree rotation without flipping.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.RotateNoneFlipXY">
            <summary>
            Specifies no rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate270FlipNone">
            <summary>
            Specifies a 270-degree rotation without flipping.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate90FlipXY">
            <summary>
            Specifies a 90-degree rotation followed by a horizontal and vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate180FlipY">
            <summary>
            Specifies a 180-degree rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.RotateNoneFlipX">
            <summary>
            Specifies no rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate90FlipX">
            <summary>
            Specifies a 90-degree rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate270FlipY">
            <summary>
            Specifies a 270-degree rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.RotateNoneFlipY">
            <summary>
            Specifies no rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate180FlipX">
            <summary>
            Specifies a 180-degree rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate90FlipY">
            <summary>
            Specifies a 90-degree rotation followed by a vertical flip.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.RotateFlipType.Rotate270FlipX">
            <summary>
            Specifies a 270-degree rotation followed by a horizontal flip.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.SystemColorsHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.SystemColorsHelper.SetSchemeByName(OpenNETCF.Drawing.SystemColorsHelper.SchemeName)">
            <summary>
            Sets the current system color scheme
            </summary>
            <param name="aSchemeName"></param>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.GradientActiveCaption">
            <summary>
            Gets a Color structure that is the lightest color in the color gradient of an active window's title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.GradientInactiveCaption">
            <summary>
            Gets a Color structure that is the lightest color in the color gradient of an inactive window's title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ActiveBorder">
            <summary>
            Gets a Color structure that is the color of the active window's border.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.AppWorkspace">
            <summary>
            Gets a Color structure that is the color of the application workspace.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.Control">
            <summary>
            Gets a Color structure that is the face color of a 3-D element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ControlLight">
            <summary>
            Gets a Color structure that is the light color of a 3-D element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ControlLightLight">
            <summary>
            Gets a Color structure that is the highlight color of a 3-D element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ControlDark">
            <summary>
            Gets a Color structure that is the shadow color of a 3-D element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ControlDarkDark">
            <summary>
            Gets a Color structure that is the dark shadow color of a 3-D element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ScrollBar">
            <summary>
            Gets a Color structure that is the color of the background of a scroll bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.WindowFrame">
            <summary>
            Gets a Color structure that is the color of a window frame.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.HotTrack">
            <summary>
            Gets a Color structure that is the color used to designate a hot-tracked item.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.InactiveBorder">
            <summary>
            Gets a Color structure that is the color of an inactive window's border.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.Info">
            <summary>
            Gets a Color structure that is the color of the background of a ToolTip.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.InfoText">
            <summary>
            Gets a Color structure that is the color of the text of a ToolTip.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ActiveCaption">
            <summary>
            Gets a Color structure that is the color of the background of the active window's title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ActiveCaptionText">
            <summary>
            Gets a Color structure that is the color of the text in the active window's title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.ControlText">
            <summary>
            	Gets a Color structure that is the color of text in a 3-D element.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.Desktop">
            <summary>
            Gets a Color structure that is the color of the desktop.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.DialogBackground">
            <summary>
            Gets a Color structure that is the color of the background of a Dialog.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.DialogBoxText">
            <summary>
            Gets a Color structure that is the color of text on a Dialog.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.GrayText">
            <summary>
            Gets a Color structure that is the color of dimmed text.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.InactiveCaption">
            <summary>
            Gets a Color structure that is the color of the background of an inactive window's title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.InactiveCaptionText">
            <summary>
            Gets a Color structure that is the color of the text in an inactive window's title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.Menu">
            <summary>
            Gets a Color structure that is the color of a menu's background.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.MenuText">
            <summary>
            Gets a Color structure that is the color of a menu's text.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.Highlight">
            <summary>
            Gets a Color structure that is the color of the background of selected items.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.HighlightText">
            <summary>
            Gets a Color structure that is the color of the text of selected items.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.Window">
            <summary>
            Gets a Color structure that is the color of the background in the client area of a window.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.SystemColorsHelper.WindowText">
            <summary>
            Gets a Color structure that is the color of the text in the client area of a window.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.SystemColorsHelper.SchemeName">
            <summary>
            System Color scheme names
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.Brick">
            <summary>
            Brick
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.Desert">
            <summary>
            Desert
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.Eggplant">
            <summary>
            Eggplant
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.HighContrastBlack">
            <summary>
            High-Contrast Black
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.HighContrastWhite">
            <summary>
            High-Contrast White
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.Lilac">
            <summary>
            Lilac
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.Spruce">
            <summary>
            Spruce
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.Storm">
            <summary>
            Storm
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.SystemColorsHelper.SchemeName.WindowsStandard">
            <summary>
            Windows Standard
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.BitmapFileHeader">
            <summary>
            This structure contains information about the type, size, and layout of a file that containing a device-independent bitmap (DIB).
            </summary>
            <remarks>Wraps the native <b>BITMAPFILEHEADER</b> structure</remarks>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.Type">
            <summary>
            Specifies the file type. It must be BM.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.Size">
            <summary>
            Specifies the size, in bytes, of the bitmap file.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.OffBits">
            <summary>
            Specifies the offset, in bytes, from the <b>BitmapFileHeader</b> structure to the bitmap bits.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.Data">
            <summary>
            Internal data
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.BitmapInfoHeader">
            <summary>
            Contains information about the dimensions and color format of a device-independent bitmap (DIB).
            </summary>
            <remarks>Wrapper for Win32 <b>BITMAPINFOHEADER</b> structure</remarks>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Size">
            <summary>
            Specifies the number of bytes required by the structure.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Width">
            <summary>
            Specifies the width of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Height">
            <summary>
            Specifies the height of the bitmap, in pixels.
            If biHeight is positive, the bitmap is a bottom-up DIB and its origin is the lower-left corner.
            If biHeight is negative, the bitmap is a top-down DIB and its origin is the upper-left corner.
            If biHeight is negative, indicating a top-down DIB, biCompression must be either BI_RGB or BI_BITFIELDS.
            Top-down DIBs cannot be compressed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Planes">
            <summary>
            Specifies the number of planes for the target device.
            This value must be set to 1.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.BitCount">
            <summary>
            Specifies the number of bits per pixel.
            The biBitCount member determines the number of bits that define each pixel and the maximum number of colors in the bitmap.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Compression">
            <summary>
            Specifies the type of compression for a compressed bottom-up bitmap (top-down DIBs cannot be compressed).
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.SizeImage">
            <summary>
            Specifies the size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.XPelsPerMeter">
            <summary>
            Specifies the horizontal resolution, in pixels per meter, of the target device for the bitmap.
            An application can use this value to select a bitmap from a resource group that best matches the characteristics of the current device.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.YPelsPerMeter">
            <summary>
            Specifies the vertical resolution, in pixels per meter, of the target device for the bitmap
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.ClrUsed">
            <summary>
            Specifies the number of color indexes in the color table that are actually used by the bitmap.
            If this value is zero, the bitmap uses the maximum number of colors corresponding to the value of the biBitCount member for the compression mode specified by biCompression.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.ClrImportant">
            <summary>
            Specifies the number of color indexes required for displaying the bitmap.
            If this value is zero, all colors are required.
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.DibSection">
            <summary>
            Wrapper for WIN32 <b>DIBSECTION</b> structure
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmType">
            <summary>
            Specifies the bitmap type; set to zero.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmWidth">
            <summary>
            Specifies the width, in pixels, of the bitmap.
            The width must be greater than zero.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmHeight">
            <summary>
            Specifies the height, in pixels, of the bitmap.
            The height must be greater than zero.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmWidthBytes">
            <summary>
            Specifies the number of bytes in each scan line.
            This value must be divisible by 2, because the system assumes that the bit values of a bitmap form an array that is word aligned.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmPlanes">
            <summary>
            Specifies the count of color planes.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmBitsPixel">
            <summary>
            Specifies the number of bits required to indicate the color of a pixel.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmBits">
            <summary>
            Pointer to the location of the bit values for the bitmap.
            The bmBits member must be a long pointer to an array of character (1-byte) values.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biSize">
            <summary>
            Specifies the number of bytes required by the structure.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biWidth">
            <summary>
            Specifies the width of the bitmap, in pixels.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biHeight">
            <summary>
            Specifies the height of the bitmap, in pixels. If biHeight is positive, the bitmap is a bottom-up DIB and its origin is the lower-left corner. If biHeight is negative, the bitmap is a top-down DIB and its origin is the upper-left corner.
            If biHeight is negative, indicating a top-down DIB, biCompression must be either BI_RGB or BI_BITFIELDS. Top-down DIBs cannot be compressed. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biPlanes">
            <summary>
            Specifies the number of planes for the target device. This value must be set to 1.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biBitCount">
            <summary>
            Specifies the number of bits-per-pixel. The biBitCount member of the BITMAPINFOHEADER structure determines the number of bits that define each pixel and the maximum number of colors in the bitmap.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biCompression">
            <summary>
            Specifies the type of compression for a compressed bottom-up bitmap (top-down DIBs cannot be compressed).
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biSizeImage">
            <summary>
            Specifies the size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biXPelsPerMeter">
            <summary>
            Specifies the horizontal resolution, in pixels-per-meter, of the target device for the bitmap. An application can use this value to select a bitmap from a resource group that best matches the characteristics of the current device.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biYPelsPerMeter">
            <summary>
            Specifies the vertical resolution, in pixels-per-meter, of the target device for the bitmap.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biClrUsed">
            <summary>
            Specifies the number of color indexes in the color table that are actually used by the bitmap. If this value is zero, the bitmap uses the maximum number of colors corresponding to the value of the biBitCount member for the compression mode specified by biCompression.
            If biClrUsed is nonzero and the biBitCount member is less than 16, the biClrUsed member specifies the actual number of colors the graphics engine or device driver accesses. If biBitCount is 16 or greater, the biClrUsed member specifies the size of the color table used to optimize performance of the system color palettes. If biBitCount equals 16 or 32, the optimal color palette starts immediately following the three DWORD masks. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.biClrImportant">
            <summary>
            Specifies the number of color indexes that are required for displaying the bitmap. If this value is zero, all colors are required.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.dsBitfields0">
            <summary>
            Specifies three color masks for the DIB. This field is only valid when the BitCount member of the BITMAPINFOHEADER structure has a value greater than 8. Each color mask indicates the bits that are used to encode one of the three color channels (red, green, and blue).
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.dsBitfields1">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.dsBitfields2">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.dshSection">
            <summary>
            Contains a handle to the file mapping object that the CreateDIBSection function used to create the DIB. If CreateDIBSection was called with a NULL value for its hSection parameter, causing the system to allocate memory for the bitmap, the dshSection member will be NULL.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.dsOffset">
            <summary>
            Specifies the offset to the bitmap's bit values within the file mapping object referenced by dshSection. If dshSection is NULL, the dsOffset value has no meaning.
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GDI">
            <summary>
            GDI P/Invokes and definitions.
            </summary>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SetTextColor(System.IntPtr,System.Int32)">
            <summary>
            Set the forecolor of text in the selected DC
            </summary>
            <param name="hdc"></param>
            <param name="crColor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetTextColor(System.IntPtr)">
            <summary>
            Get the forecolor of text in the selected DC
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SetBkColor(System.IntPtr,System.Int32)">
            <summary>
            Set the backcolor in the selected DC
            </summary>
            <param name="hdc"></param>
            <param name="crColor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SetBkMode(System.IntPtr,OpenNETCF.Win32.GDI.BackgroundMode)">
            <summary>
            Set the backmode in the selected DC
            </summary>
            <param name="hdc"></param>
            <param name="iBkMode"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            Select a system object (FONT, DC, etc.)
            </summary>
            <param name="hdc"></param>
            <param name="hgdiobj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            Release a Device Context
            </summary>
            <param name="hWnd"></param>
            <param name="hDC"></param>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetWindowDC(System.IntPtr)">
            <summary>
            Get the DC for the specified window
            </summary>
            <param name="hWnd">Native window handle of the window.</param>
            <returns>Device Context Handle for specified window.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetDC(System.IntPtr)">
            <summary>
            Get the DC for the specified window handle
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.Rectangle(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw a rectangle in a DC
            </summary>
            <param name="hdc"></param>
            <param name="nLeftRect"></param>
            <param name="nTopRect"></param>
            <param name="nRightRect"></param>
            <param name="nBottomRect"></param>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetObject(System.IntPtr,System.Int32,System.Byte[])">
            <summary>
            This function obtains information about a specified graphics object.
            </summary>
            <param name="hObj">Handle to the graphics object of interest.</param>
            <param name="cb">Specifies the number of bytes of information to be written to the buffer.</param>
            <param name="objdata">a buffer that is to receive the information about the specified graphics object.</param>
            <returns>If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetObject(System.IntPtr,System.Int32,OpenNETCF.Win32.DibSection)">
            <summary>
            This function obtains information about a specified graphics object.
            </summary>
            <param name="hObj">Handle to the graphics object of interest.</param>
            <param name="cb">Specifies the number of bytes of information to be written to the buffer.</param>
            <param name="objdata">a buffer that is to receive the information about the specified graphics object.</param>
            <returns>If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.CreateSolidBrush(System.Int32)">
            <summary>
            This function creates a logical brush that has the specified solid color.
            </summary>
            <param name="crColor">Specifies the color of the brush.</param>
            <returns>A handle that identifies a logical brush indicates success.</returns>
        </member>
        <member name="T:OpenNETCF.Win32.GDI.RegionFlags">
            <summary>
            Region type
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.ERROR">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.NULLREGION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.SIMPLEREGION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.COMPLEXREGION">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GDI.BackgroundMode">
            <summary>
            Background mode
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.BackgroundMode.TRANSPARENT">
            <summary>
            Background is Transparent.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.BackgroundMode.OPAQUE">
            <summary>
            Background is Opaque.
            </summary>
        </member>
    </members>
</doc>
